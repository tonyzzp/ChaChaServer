// Code generated by protoc-gen-go. DO NOT EDIT.
// source: friends.proto

package protobeans

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type SearchUser struct {
	UserName string `protobuf:"bytes,1,opt,name=userName" json:"userName,omitempty"`
}

func (m *SearchUser) Reset()                    { *m = SearchUser{} }
func (m *SearchUser) String() string            { return proto.CompactTextString(m) }
func (*SearchUser) ProtoMessage()               {}
func (*SearchUser) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *SearchUser) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

type SearchUserResp struct {
	UserId   int32  `protobuf:"varint,1,opt,name=userId" json:"userId,omitempty"`
	UserName string `protobuf:"bytes,2,opt,name=userName" json:"userName,omitempty"`
	Sex      int32  `protobuf:"varint,3,opt,name=sex" json:"sex,omitempty"`
	Head     string `protobuf:"bytes,4,opt,name=head" json:"head,omitempty"`
}

func (m *SearchUserResp) Reset()                    { *m = SearchUserResp{} }
func (m *SearchUserResp) String() string            { return proto.CompactTextString(m) }
func (*SearchUserResp) ProtoMessage()               {}
func (*SearchUserResp) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *SearchUserResp) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *SearchUserResp) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

func (m *SearchUserResp) GetSex() int32 {
	if m != nil {
		return m.Sex
	}
	return 0
}

func (m *SearchUserResp) GetHead() string {
	if m != nil {
		return m.Head
	}
	return ""
}

type AddFriend struct {
	FriendId int32  `protobuf:"varint,1,opt,name=friendId" json:"friendId,omitempty"`
	Message  string `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
}

func (m *AddFriend) Reset()                    { *m = AddFriend{} }
func (m *AddFriend) String() string            { return proto.CompactTextString(m) }
func (*AddFriend) ProtoMessage()               {}
func (*AddFriend) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

func (m *AddFriend) GetFriendId() int32 {
	if m != nil {
		return m.FriendId
	}
	return 0
}

func (m *AddFriend) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type AddFriendResp struct {
	Ok    bool   `protobuf:"varint,1,opt,name=ok" json:"ok,omitempty"`
	Error string `protobuf:"bytes,2,opt,name=error" json:"error,omitempty"`
}

func (m *AddFriendResp) Reset()                    { *m = AddFriendResp{} }
func (m *AddFriendResp) String() string            { return proto.CompactTextString(m) }
func (*AddFriendResp) ProtoMessage()               {}
func (*AddFriendResp) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{3} }

func (m *AddFriendResp) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

func (m *AddFriendResp) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

type AddFriendConfirm struct {
	Ok       bool  `protobuf:"varint,1,opt,name=ok" json:"ok,omitempty"`
	FriendId int32 `protobuf:"varint,2,opt,name=friendId" json:"friendId,omitempty"`
}

func (m *AddFriendConfirm) Reset()                    { *m = AddFriendConfirm{} }
func (m *AddFriendConfirm) String() string            { return proto.CompactTextString(m) }
func (*AddFriendConfirm) ProtoMessage()               {}
func (*AddFriendConfirm) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{4} }

func (m *AddFriendConfirm) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

func (m *AddFriendConfirm) GetFriendId() int32 {
	if m != nil {
		return m.FriendId
	}
	return 0
}

type NewFriend struct {
	FriendId int32  `protobuf:"varint,1,opt,name=friendId" json:"friendId,omitempty"`
	UserName string `protobuf:"bytes,2,opt,name=userName" json:"userName,omitempty"`
	Sex      int32  `protobuf:"varint,3,opt,name=sex" json:"sex,omitempty"`
	Head     string `protobuf:"bytes,4,opt,name=head" json:"head,omitempty"`
}

func (m *NewFriend) Reset()                    { *m = NewFriend{} }
func (m *NewFriend) String() string            { return proto.CompactTextString(m) }
func (*NewFriend) ProtoMessage()               {}
func (*NewFriend) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{5} }

func (m *NewFriend) GetFriendId() int32 {
	if m != nil {
		return m.FriendId
	}
	return 0
}

func (m *NewFriend) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

func (m *NewFriend) GetSex() int32 {
	if m != nil {
		return m.Sex
	}
	return 0
}

func (m *NewFriend) GetHead() string {
	if m != nil {
		return m.Head
	}
	return ""
}

type Friend struct {
	UserId   int32  `protobuf:"varint,1,opt,name=userId" json:"userId,omitempty"`
	UserName string `protobuf:"bytes,2,opt,name=userName" json:"userName,omitempty"`
	Sex      int32  `protobuf:"varint,3,opt,name=sex" json:"sex,omitempty"`
	Head     string `protobuf:"bytes,4,opt,name=head" json:"head,omitempty"`
}

func (m *Friend) Reset()                    { *m = Friend{} }
func (m *Friend) String() string            { return proto.CompactTextString(m) }
func (*Friend) ProtoMessage()               {}
func (*Friend) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{6} }

func (m *Friend) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *Friend) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

func (m *Friend) GetSex() int32 {
	if m != nil {
		return m.Sex
	}
	return 0
}

func (m *Friend) GetHead() string {
	if m != nil {
		return m.Head
	}
	return ""
}

type FriendsList struct {
	Friends []*Friend `protobuf:"bytes,1,rep,name=friends" json:"friends,omitempty"`
}

func (m *FriendsList) Reset()                    { *m = FriendsList{} }
func (m *FriendsList) String() string            { return proto.CompactTextString(m) }
func (*FriendsList) ProtoMessage()               {}
func (*FriendsList) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{7} }

func (m *FriendsList) GetFriends() []*Friend {
	if m != nil {
		return m.Friends
	}
	return nil
}

type RemoveFriend struct {
	UserId int32 `protobuf:"varint,1,opt,name=userId" json:"userId,omitempty"`
}

func (m *RemoveFriend) Reset()                    { *m = RemoveFriend{} }
func (m *RemoveFriend) String() string            { return proto.CompactTextString(m) }
func (*RemoveFriend) ProtoMessage()               {}
func (*RemoveFriend) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{8} }

func (m *RemoveFriend) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func init() {
	proto.RegisterType((*SearchUser)(nil), "protobeans.SearchUser")
	proto.RegisterType((*SearchUserResp)(nil), "protobeans.SearchUserResp")
	proto.RegisterType((*AddFriend)(nil), "protobeans.AddFriend")
	proto.RegisterType((*AddFriendResp)(nil), "protobeans.AddFriendResp")
	proto.RegisterType((*AddFriendConfirm)(nil), "protobeans.AddFriendConfirm")
	proto.RegisterType((*NewFriend)(nil), "protobeans.NewFriend")
	proto.RegisterType((*Friend)(nil), "protobeans.Friend")
	proto.RegisterType((*FriendsList)(nil), "protobeans.FriendsList")
	proto.RegisterType((*RemoveFriend)(nil), "protobeans.RemoveFriend")
}

func init() { proto.RegisterFile("friends.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 302 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x52, 0xcd, 0x4a, 0xc3, 0x40,
	0x10, 0x26, 0x49, 0x9b, 0x36, 0x53, 0x5b, 0xca, 0x52, 0x4a, 0xf0, 0x54, 0xf6, 0x20, 0x39, 0x48,
	0x0e, 0x8a, 0x27, 0x41, 0xa8, 0x82, 0x20, 0x48, 0x0f, 0x11, 0x1f, 0x60, 0x9b, 0x4c, 0x4d, 0x2c,
	0xc9, 0x86, 0x9d, 0xfa, 0x43, 0x9f, 0x5e, 0xb2, 0xd9, 0xa4, 0x06, 0x41, 0x04, 0xe9, 0x69, 0xe7,
	0x23, 0xdf, 0x1f, 0x93, 0x81, 0xf1, 0x46, 0x65, 0x58, 0x24, 0x14, 0x96, 0x4a, 0xee, 0x24, 0x03,
	0xfd, 0xac, 0x51, 0x14, 0xc4, 0x03, 0x80, 0x27, 0x14, 0x2a, 0x4e, 0x9f, 0x09, 0x15, 0x3b, 0x85,
	0xe1, 0x1b, 0xa1, 0x5a, 0x89, 0x1c, 0x7d, 0x6b, 0x61, 0x05, 0x5e, 0xd4, 0x62, 0xfe, 0x0a, 0x93,
	0x03, 0x33, 0x42, 0x2a, 0xd9, 0x1c, 0xdc, 0xea, 0xeb, 0x43, 0xa2, 0xb9, 0xfd, 0xc8, 0xa0, 0x8e,
	0x8b, 0xdd, 0x75, 0x61, 0x53, 0x70, 0x08, 0x3f, 0x7d, 0x47, 0x0b, 0xaa, 0x91, 0x31, 0xe8, 0xa5,
	0x28, 0x12, 0xbf, 0xa7, 0x99, 0x7a, 0xe6, 0x4b, 0xf0, 0x96, 0x49, 0x72, 0xaf, 0x5b, 0x57, 0x76,
	0x75, 0xff, 0x36, 0xa8, 0xc5, 0xcc, 0x87, 0x41, 0x8e, 0x44, 0xe2, 0xa5, 0x49, 0x6a, 0x20, 0xbf,
	0x82, 0x71, 0x6b, 0xa1, 0xdb, 0x4e, 0xc0, 0x96, 0x5b, 0x6d, 0x30, 0x8c, 0x6c, 0xb9, 0x65, 0x33,
	0xe8, 0xa3, 0x52, 0x52, 0x19, 0x61, 0x0d, 0xf8, 0x0d, 0x4c, 0x5b, 0xd9, 0x9d, 0x2c, 0x36, 0x99,
	0xca, 0x7f, 0x28, 0xbf, 0x17, 0xb2, 0xbb, 0x85, 0x78, 0x06, 0xde, 0x0a, 0x3f, 0xfe, 0xd0, 0xfc,
	0xff, 0x4b, 0x5a, 0x83, 0x6b, 0x72, 0x8e, 0xf7, 0x23, 0xae, 0x61, 0x54, 0x67, 0xd0, 0x63, 0x46,
	0x3b, 0x76, 0x0e, 0x03, 0x73, 0x4a, 0xbe, 0xb5, 0x70, 0x82, 0xd1, 0x05, 0x0b, 0x0f, 0xb7, 0x14,
	0x9a, 0x65, 0x37, 0x14, 0x7e, 0x06, 0x27, 0x11, 0xe6, 0xf2, 0x1d, 0x7f, 0xaf, 0x79, 0x3b, 0x87,
	0x59, 0x8e, 0x61, 0xb6, 0xdf, 0x97, 0x61, 0x9c, 0x8a, 0x38, 0x15, 0xc6, 0xd4, 0xd5, 0xcf, 0xe5,
	0x57, 0x00, 0x00, 0x00, 0xff, 0xff, 0xd1, 0x24, 0x6f, 0x20, 0xbf, 0x02, 0x00, 0x00,
}
